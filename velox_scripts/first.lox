print "one";
print true;
print 1 + 2;

var a = 1;
var b = 2;
print a + b;

var a = 1;
print a = 2; // "2".

var a = "global a";
var b = "global b";
var c = "global c";
{
  var a = "outer a";
  var b = "outer b";
  {
    var a = "inner a";
    print a;
    print b;
    print c;
  }
  print a;
  print b;
  print c;
}
print a;
print b;
print c;

print "hi" or 2; // "hi".
print nil or "yes"; // "yes".

if (true)
{
  print "Inside then";
}

if (false)
{
  // Ignored
}
else
{
  print "Inside else";
}

var loop = 0;

while (loop < 10)
{
  print loop;
  loop = loop + 1;
}

var a = 0;
var temp;

for (var b = 1; a < 10000; b = temp + b) {
  print a;
  temp = a;
  a = b;
}

fun sayHi(first, last) {
  print "Hi, " + first + " " + last + "!";
}

sayHi("Dear", "Reader");

fun fib(n) {
  if (n <= 1) return n;
  return fib(n - 2) + fib(n - 1);
}

for (var i = 0; i < 20; i = i + 1) {
  print fib(i);
}

fun a () {
  fun b() {
    print "In b";
  }

  return b;
}

var c = a();
c();

fun makeCounter() {
  var i = 0;
  fun count() {
    i = i + 1;
    print i;
  }

  return count;
}

var counter = makeCounter();
counter(); // "1".
counter(); // "2".


class DevonshireCream {
  serveOn() {
    return "Scones";
  }
}

print DevonshireCream;


class Bagel {}
var bagel = Bagel();
print bagel;

class Bacon {
  eat() {
    print "Crunch crunch crunch!";
  }
}

Bacon().eat(); // Prints "Crunch crunch crunch!".

class Thing {
  getCallback() {
    fun localFunction() {
      print this;
    }

    return localFunction;
  }
}

var callback = Thing().getCallback();
callback();

class Foo {
  init() {
    print this;
  }
}

var foo = Foo();
print foo.init();

class Doughnut {
  cook() {
    print "Fry until golden brown.";
  }
}

class BostonCream < Doughnut {
  cook() {
    super.cook();
    print "Pipe full of custard and coat with chocolate.";
  }
}

BostonCream().cook();
